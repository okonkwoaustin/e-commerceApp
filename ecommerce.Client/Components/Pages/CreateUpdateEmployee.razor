@using Newtonsoft.Json
@using System.Text
@using e_commerceApp.Shared.Models

@inject ISnackbar snacker
@inject HttpClient _httpClient

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <MudDialog>
        <DialogContent>
            <DataAnnotationsValidator />
            <MudGrid Class="mb-5">
                <MudItem xs="9">
                    <MudTextField Variant="Variant.Outlined" @bind-Value="model.FullName" Label="Full Name" />
                </MudItem>
                <MudItem xs="3">
                    <MudTextField Variant="Variant.Outlined" @bind-Value="model.Age" Label="Age" />
                </MudItem>
            </MudGrid>
            <MudDatePicker Class="mb-5" Variant="Variant.Outlined" Label="Date of Birth" @bind-Date="_date" />
            <MudDatePicker Class="mb-5" Variant="Variant.Outlined" Label="Date Created" @bind-Date="_date" ReadOnly="true" Value="_date" />
            <MudTextField Class="mb-5" Variant="Variant.Outlined" @bind-Value="model.Department" Label="Department" />
            <MudTextField Class="mb-5" Variant="Variant.Outlined" @bind-Value="model.PhoneNumber" Label="Phone Number" />
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary">Save</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] 
    private MudDialogInstance mudDialog { get; set; }
    public DateTime? _date { get; set; } = DateTime.Today;
    public Employee model { get; set; } = new Employee();

    private async Task OnValidSubmit(EditContext editContext)
    {
        if (_date.HasValue) 
        {
            model.DateOfBirth = _date.Value; 
        }
      
        var result = await _httpClient.PostAsJsonAsync("api/Employee/Create", model);
        var errorResponse = await result.Content.ReadAsStringAsync();
        if (result.IsSuccessStatusCode)
        {
            snacker.Add("Successfully created the employee!", Severity.Success);
            mudDialog.Close();
        }
        else
        {
            snacker.Add("Failed to create the employee!", Severity.Error);
            mudDialog.Close();
        }
    }

    private void Cancel()
    {
        mudDialog.Cancel(); 
    }
}